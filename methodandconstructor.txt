public class OverloadingDemo {

    // Constructor Overloading Example
    int rollNo;
    String name;
    double marks;

    // Constructor 1: No parameters
    OverloadingDemo() {
        rollNo = 0;
        name = "Unknown";
        marks = 0.0;
    }

    // Constructor 2: Two parameters
    OverloadingDemo(int r, String n) {
        rollNo = r;
        name = n;
        marks = 0.0;
    }

    // Constructor 3: Three parameters
    OverloadingDemo(int r, String n, double m) {
        rollNo = r;
        name = n;
        marks = m;
    }

    void display() {
        System.out.println("Roll No: " + rollNo + ", Name: " + name + ", Marks: " + marks);
    }

    // Method Overloading Example
    int add(int a, int b) {
        return a + b;
    }

    int add(int a, int b, int c) {
        return a + b + c;
    }

    double add(double a, double b) {
        return a + b;
    }

    public static void main(String[] args) {
        System.out.println("=== Constructor Overloading Example ===");
        OverloadingDemo s1 = new OverloadingDemo();
        OverloadingDemo s2 = new OverloadingDemo(101, "Amit");
        OverloadingDemo s3 = new OverloadingDemo(102, "Priya", 89.5);

        s1.display();
        s2.display();
        s3.display();

        System.out.println("\n=== Method Overloading Example ===");
        OverloadingDemo calc = new OverloadingDemo();

        System.out.println("Sum of 2 integers: " + calc.add(5, 10));
        System.out.println("Sum of 3 integers: " + calc.add(5, 10, 15));
        System.out.println("Sum of 2 doubles: " + calc.add(4.5, 3.2));
    }
}
